var pf={p:{}, f:$("#form [name]") }
for (var i =0; i <pf.f.length; i++) {
    if (pf.f.eq(i).attr("name")!="myfiles") {pf.p[pf.f.eq(i).attr("name")]=pf.f.eq(i).val().trim();}
}

ES6 提出“Same-value equality”（同值相等）算法，用来解决这个问题。Object.is就是部署这个算法的新方法。它用来比较两个值是否严格相等，与严格比较运算符（===）的行为基本一致。
ES5 可以通过下面的代码，部署Object.is。
Object.defineProperty(Object, 'is', {
  value: function(x, y) {
    if (x === y) {
      // 针对+0 不等于 -0的情况
      return x !== 0 || 1 / x === 1 / y;
    }
    // 针对NaN的情况
    return x !== x && y !== y;
  },
  configurable: true,
  enumerable: false,
  writable: true
});