Ctrl+D              选词 （反复按快捷键，即可继续向下同时选中下一个相同的文本进行同时编辑）
Alt+F3              选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑
Shift+鼠标右键      （或使用鼠标中键）可以用鼠标进行竖向多行选择
Ctrl+Shift+M        选择括号内的内容（按住-继续选择父括号）
Ctrl+M              光标移动至括号内开始或结束的位置
Ctrl+T              词互换
Ctrl+J              合并行（已选择需要合并的多行时）
Ctrl+K+B            开启/关闭侧边栏
Alt+.               闭合当前标签
! + Tab             新建html

Ctrl+Shift+↑        可以移动此行代码，与上行互换
Ctrl+Shift+↓        可以移动此行代码，与下行互换
Ctrl+Shift+[        折叠代码
Ctrl+Shift+]        展开代码
Ctrl+K+T            折叠属性
Ctrl+K+0            展开所有
Ctrl+K+U            改为大写
Ctrl+K+L            改为小写
F9                  行排序(按a-z)
"draw_white_space": "all"  sublimeText3 显示不常见字符 首选项 -设置用户


currentPageNum pageNum
pageNum=0 所有数据
input无法输入 readonly="readonly"
input不可编辑   disabled

contentType:"application/json",
alert(JSON.stringify(result));

isNaN("数值")用来判断是否为数字，非数字返回true
parseInt
$("input[name=salesMan]").find("option[value='pxx']").attr("selected",true);

/*全窗口*/
function show2(title,url){
	var index = layer.open({
		type: 2,
		title: title,
		content: url
	});
	layer.full(index);
}
/******************/   下拉选中添加input框
function optionUpd(select,Id){
    $("#"+Id).val($(select).val());
	$("input[name="+Id+"]").val($(select).find("option:selected").attr("opId"));
}

if (flag) {
    $("tr").on("dblclick",function(){
	    try {
			parent.showText($(this).attr("materialCode"),$(this).attr("materialName"),flag);
			parent.layer.closeAll();
		} catch (e) {}
	})
}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
siblings()
查找每个 p 元素的所有类名为 "selected" 的所有同胞元素：
$("p").siblings(".selected");
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
find() 
搜索所有段落中的后代 span 元素，并将其颜色设置为红色：
$("p").find("span").css('color','red');
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loding效果
var layerLoad= layer.load(2, {shade:[0.4,'#000']});
layer.close(layerLoad);

mobile
var layerLoad= layer.open({type: 2,shadeClose: false});


layer.close(layerLoad);


使用Event Delegation
当你在一个容器中有许多节点，你想对所有的节点都绑定一个事件，delegation很适合这样的应用场景。使用 Delegation，我们仅需要在父级绑定事件，然后查看哪个子节点(目标节点)触发了事件。当你有一个很多数据的table的时候，你想对td节点设置事件，这就变得很方便。先获得table，然后为所有的td节点设置delegation事件：

.代码如下:

$("table").delegate("td","hover", function(){
	$(this).toggleClass("hover");
});

tranlist.push({"customCode":customCode});
var trans=JSON.stringify(tranlist);
/************************************************************/
 $(function(){
        $("body").keydown(function(event){
            var keyCode = event.keyCode;
            if(keyCode == 13){//回车事件
                searchorders();
                $("#search").click();
            }
        });
    })
/************************************************************/

先安装node.js

npm install -g fis3

npm install fis-parser-node-sass -g

npm install fis-parser-sass -g

npm install -g fis3-deploy-encoding

npm install -g fis3-hook-commonjs

npm install fis3-postpackager-loader

npm install -g fis-optimizer-html-minifier //压缩html

fis3 release -d E:/EclipseFile/ljwl/WebRoot

fis3 release -d E:/resource/

C:\Users\Administrator\Desktop\tomcat\apache-6.0.44\webapps
C:\Users\Administrator\Desktop\tomcat\apache-6.0.44\webapps

安装淘宝镜像
npm install -g cnpm --registry=https://registry.npm.taobao.org

ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
css 模块化
jq 变量定义 ==技巧
ajax loading效果
ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
console.log("%c我爱你",'font-size:80px;color:green');

table 导出时td内容太长会压缩，处理方法为：
<td style="mso-number-format:'\@';">100821199909091234</td>

获取当前页面滚动条距离顶部距离
var sTop = document.body.scrollTop+document.documentElement.scrollTop;
var sTop = document.documentElement.scrollTop || document.body.scrollTop;
var sTop = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop;
http://www.cnblogs.com/Chary/p/No000067.html

var params={},fromName=$("#form [name]"),url="";
    for (var i =0; i <fromName.length; i++) {
    var name=fromName.eq(i).attr("name");
    var value=fromName.eq(i).val().trim();
    if (name!="myfiles") {params[name]=value;}
}
fN=$("#form [name]"),url="";
for (var i =0; i <fN.length; i++) {
    fN.eq(i).val(l[fN.eq(i).attr("name")]);
}
var index = layer.load(1, {
    shade: [0.4,'#000'] //0.1透明度的白色背景
});
layer.close(index);


获取览器显示区域的高度 ： $(window).height(); 
获取浏览器显示区域的宽度 ：$(window).width();
获取页面的文档高度 ：$(document).height();
获取页面的文档宽度 ：$(document).width();
获取滚动条到顶部的垂直高度 ：$(document).scrollTop();
获取滚动条到左边的垂直宽度 ：$(document).scrollLeft();


function exportExcelAfter(){
	var pagNum=$("#pageNum").val().trim();pageNum = Number(pagNum)?pagNum:10;

	var str=exportUrl+"repairReportDownload.do?params="+$("#params").val().trim()+"&pageNum="+pagNum+"&datemin="+$("#datemin").val()+"&datemax="+$("#datemax").val()+
		"&fileName=维修费用报表"+
		"&columnNames[]=车牌"+"&keys[]=carId";
	window.location.href =str ;
}